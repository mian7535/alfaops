#############################################################################
# Makefile for building: AerostatGCS
# Generated by qmake (2.01a) (Qt 4.8.4) on: Thu May 22 01:21:15 2014
# Project:  AerostatGCS.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_NO_DEBUG_OUTPUT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I/usr/local/qwt-6.0.2/src -Irelease -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-z,relro
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L/usr/local/qwt-6.0.2/lib/ -lqwt -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = main.cpp \
		GUI/GCSMainWindow.cpp \
		GUI/ConfluencePointTension.cpp \
		GUI/WindSpeed.cpp \
		GUI/HeliumPressure.cpp \
		GUI/BallonetPressure.cpp \
		GUI/Pitch.cpp \
		GUI/Roll.cpp \
		Interface.cpp \
		DataLog.cpp release/moc_GCSMainWindow.cpp \
		release/moc_ConfluencePointTension.cpp \
		release/moc_WindSpeed.cpp \
		release/moc_HeliumPressure.cpp \
		release/moc_BallonetPressure.cpp \
		release/moc_Pitch.cpp \
		release/moc_Roll.cpp \
		release/moc_Interface.cpp \
		release/moc_DataLog.cpp \
		release/qrc_Logo.cpp
OBJECTS       = release/main.o \
		release/GCSMainWindow.o \
		release/ConfluencePointTension.o \
		release/WindSpeed.o \
		release/HeliumPressure.o \
		release/BallonetPressure.o \
		release/Pitch.o \
		release/Roll.o \
		release/Interface.o \
		release/DataLog.o \
		release/moc_GCSMainWindow.o \
		release/moc_ConfluencePointTension.o \
		release/moc_WindSpeed.o \
		release/moc_HeliumPressure.o \
		release/moc_BallonetPressure.o \
		release/moc_Pitch.o \
		release/moc_Roll.o \
		release/moc_Interface.o \
		release/moc_DataLog.o \
		release/qrc_Logo.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/debug_and_release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/build_pass.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		AerostatGCS.pro
QMAKE_TARGET  = AerostatGCS
DESTDIR       = 
TARGET        = AerostatGCS

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release $(TARGET)

$(TARGET): ui_GCSMainWindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -o Makefile.Release AerostatGCS.pro

dist: 
	@$(CHK_DIR_EXISTS) release/AerostatGCS1.0.0 || $(MKDIR) release/AerostatGCS1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/AerostatGCS1.0.0/ && $(COPY_FILE) --parents GUI/GCSMainWindow.h GUI/ConfluencePointTension.h GUI/WindSpeed.h GUI/HeliumPressure.h GUI/BallonetPressure.h GUI/Pitch.h GUI/Roll.h Interface.h DataLog.h Debug.h release/AerostatGCS1.0.0/ && $(COPY_FILE) --parents GUI/Logo.qrc release/AerostatGCS1.0.0/ && $(COPY_FILE) --parents main.cpp GUI/GCSMainWindow.cpp GUI/ConfluencePointTension.cpp GUI/WindSpeed.cpp GUI/HeliumPressure.cpp GUI/BallonetPressure.cpp GUI/Pitch.cpp GUI/Roll.cpp Interface.cpp DataLog.cpp release/AerostatGCS1.0.0/ && $(COPY_FILE) --parents GUI/GCSMainWindow.ui release/AerostatGCS1.0.0/ && (cd `dirname release/AerostatGCS1.0.0` && $(TAR) AerostatGCS1.0.0.tar AerostatGCS1.0.0 && $(COMPRESS) AerostatGCS1.0.0.tar) && $(MOVE) `dirname release/AerostatGCS1.0.0`/AerostatGCS1.0.0.tar.gz . && $(DEL_FILE) -r release/AerostatGCS1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_GCSMainWindow.cpp release/moc_ConfluencePointTension.cpp release/moc_WindSpeed.cpp release/moc_HeliumPressure.cpp release/moc_BallonetPressure.cpp release/moc_Pitch.cpp release/moc_Roll.cpp release/moc_Interface.cpp release/moc_DataLog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_GCSMainWindow.cpp release/moc_ConfluencePointTension.cpp release/moc_WindSpeed.cpp release/moc_HeliumPressure.cpp release/moc_BallonetPressure.cpp release/moc_Pitch.cpp release/moc_Roll.cpp release/moc_Interface.cpp release/moc_DataLog.cpp
release/moc_GCSMainWindow.cpp: GUI/ConfluencePointTension.h \
		GUI/WindSpeed.h \
		GUI/HeliumPressure.h \
		GUI/BallonetPressure.h \
		GUI/Pitch.h \
		GUI/Roll.h \
		GUI/GCSMainWindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/GCSMainWindow.h -o release/moc_GCSMainWindow.cpp

release/moc_ConfluencePointTension.cpp: GUI/ConfluencePointTension.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/ConfluencePointTension.h -o release/moc_ConfluencePointTension.cpp

release/moc_WindSpeed.cpp: GUI/WindSpeed.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/WindSpeed.h -o release/moc_WindSpeed.cpp

release/moc_HeliumPressure.cpp: GUI/HeliumPressure.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/HeliumPressure.h -o release/moc_HeliumPressure.cpp

release/moc_BallonetPressure.cpp: GUI/BallonetPressure.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/BallonetPressure.h -o release/moc_BallonetPressure.cpp

release/moc_Pitch.cpp: GUI/Pitch.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/Pitch.h -o release/moc_Pitch.cpp

release/moc_Roll.cpp: GUI/Roll.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GUI/Roll.h -o release/moc_Roll.cpp

release/moc_Interface.cpp: GUI/GCSMainWindow.h \
		GUI/ConfluencePointTension.h \
		GUI/WindSpeed.h \
		GUI/HeliumPressure.h \
		GUI/BallonetPressure.h \
		GUI/Pitch.h \
		GUI/Roll.h \
		Interface.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) Interface.h -o release/moc_Interface.cpp

release/moc_DataLog.cpp: Debug.h \
		DataLog.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) DataLog.h -o release/moc_DataLog.cpp

compiler_rcc_make_all: release/qrc_Logo.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_Logo.cpp
release/qrc_Logo.cpp: GUI/Logo.qrc \
		GUI/adasi.png
	/usr/lib64/qt4/bin/rcc -name Logo GUI/Logo.qrc -o release/qrc_Logo.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_GCSMainWindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_GCSMainWindow.h
ui_GCSMainWindow.h: GUI/GCSMainWindow.ui
	/usr/lib64/qt4/bin/uic GUI/GCSMainWindow.ui -o ui_GCSMainWindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

release/main.o: main.cpp GUI/GCSMainWindow.h \
		GUI/ConfluencePointTension.h \
		GUI/WindSpeed.h \
		GUI/HeliumPressure.h \
		GUI/BallonetPressure.h \
		GUI/Pitch.h \
		GUI/Roll.h \
		Interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/GCSMainWindow.o: GUI/GCSMainWindow.cpp Interface.h \
		GUI/GCSMainWindow.h \
		GUI/ConfluencePointTension.h \
		GUI/WindSpeed.h \
		GUI/HeliumPressure.h \
		GUI/BallonetPressure.h \
		GUI/Pitch.h \
		GUI/Roll.h \
		DataLog.h \
		Debug.h \
		ui_GCSMainWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GCSMainWindow.o GUI/GCSMainWindow.cpp

release/ConfluencePointTension.o: GUI/ConfluencePointTension.cpp GUI/ConfluencePointTension.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ConfluencePointTension.o GUI/ConfluencePointTension.cpp

release/WindSpeed.o: GUI/WindSpeed.cpp GUI/WindSpeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/WindSpeed.o GUI/WindSpeed.cpp

release/HeliumPressure.o: GUI/HeliumPressure.cpp GUI/HeliumPressure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/HeliumPressure.o GUI/HeliumPressure.cpp

release/BallonetPressure.o: GUI/BallonetPressure.cpp GUI/BallonetPressure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/BallonetPressure.o GUI/BallonetPressure.cpp

release/Pitch.o: GUI/Pitch.cpp GUI/Pitch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Pitch.o GUI/Pitch.cpp

release/Roll.o: GUI/Roll.cpp GUI/Roll.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Roll.o GUI/Roll.cpp

release/Interface.o: Interface.cpp Interface.h \
		GUI/GCSMainWindow.h \
		GUI/ConfluencePointTension.h \
		GUI/WindSpeed.h \
		GUI/HeliumPressure.h \
		GUI/BallonetPressure.h \
		GUI/Pitch.h \
		GUI/Roll.h \
		DataLog.h \
		Debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Interface.o Interface.cpp

release/DataLog.o: DataLog.cpp DataLog.h \
		Debug.h \
		Interface.h \
		GUI/GCSMainWindow.h \
		GUI/ConfluencePointTension.h \
		GUI/WindSpeed.h \
		GUI/HeliumPressure.h \
		GUI/BallonetPressure.h \
		GUI/Pitch.h \
		GUI/Roll.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/DataLog.o DataLog.cpp

release/moc_GCSMainWindow.o: release/moc_GCSMainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_GCSMainWindow.o release/moc_GCSMainWindow.cpp

release/moc_ConfluencePointTension.o: release/moc_ConfluencePointTension.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_ConfluencePointTension.o release/moc_ConfluencePointTension.cpp

release/moc_WindSpeed.o: release/moc_WindSpeed.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_WindSpeed.o release/moc_WindSpeed.cpp

release/moc_HeliumPressure.o: release/moc_HeliumPressure.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_HeliumPressure.o release/moc_HeliumPressure.cpp

release/moc_BallonetPressure.o: release/moc_BallonetPressure.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_BallonetPressure.o release/moc_BallonetPressure.cpp

release/moc_Pitch.o: release/moc_Pitch.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Pitch.o release/moc_Pitch.cpp

release/moc_Roll.o: release/moc_Roll.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Roll.o release/moc_Roll.cpp

release/moc_Interface.o: release/moc_Interface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_Interface.o release/moc_Interface.cpp

release/moc_DataLog.o: release/moc_DataLog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_DataLog.o release/moc_DataLog.cpp

release/qrc_Logo.o: release/qrc_Logo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_Logo.o release/qrc_Logo.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

